name: CI

on:
  push:
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

permissions: write-all

env:
  UseMultiToolTask: true

jobs:
  build:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        config: [Debug, Release]
        platform: [Win32]

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    - uses: microsoft/setup-msbuild@v1
    - uses: Trass3r/setup-cpp@master
    - name: Build
      run: msbuild /m /p:Configuration=${{ matrix.config }} /p:Platform=${{ matrix.platform }} dxwrapper.sln
    - name: Upload DX7 Artifacts
      if: ${{ matrix.config == 'Release' }}
      uses: actions/upload-artifact@v4
      with:
        name: dx7 game binaries
        path: bin/${{ matrix.config }}/dx7/*
    - name: Upload DX8 Artifacts
      if: ${{ matrix.config == 'Release' }}
      uses: actions/upload-artifact@v4
      with:
        name: dx8 game binaries
        path: bin/${{ matrix.config }}/dx8/*
    - name: Upload DX9 Artifacts
      if: ${{ matrix.config == 'Release' }}
      uses: actions/upload-artifact@v4
      with:
        name: dx9 game binaries
        path: bin/${{ matrix.config }}/dx9/*
    - name: Upload Matrix Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.config }} binaries
        path: bin/${{ matrix.config }}/*

    - name: Get release info
      if: ${{ matrix.config == 'Release' }}
      id: release_info
      uses: cardinalby/git-get-release-action@1.2.4
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag: latest

    - name: Create dxwrapper zip
      if: ${{ matrix.config == 'Release' }}
      shell: pwsh
      run: |
        $zipName = "dxwrapper-scda.zip"
        $src = "bin\${{ matrix.config }}\dxwrapper.dll"
        if (-not (Test-Path $src)) { Write-Error "File not found: $src"; exit 1 }
        Compress-Archive -Path $src -DestinationPath $zipName -Force
        Write-Host "Created $zipName"

    - name: Upload Release
      if: ${{ matrix.config == 'Release' }}
      uses: ncipollo/release-action@v1.13.0
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        allowUpdates: true
        name: ${{ steps.release_info.outputs.name }}
        body: ${{ steps.release_info.outputs.body }}
        tag: ${{ steps.release_info.outputs.tag_name }}
        artifacts: "dxwrapper-scda.zip"
